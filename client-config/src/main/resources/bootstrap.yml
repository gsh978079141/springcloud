server:
  port: 8092

#  完成了这些准备工作之后，我们就可以通过浏览器、POSTMAN或CURL等工具直接来访问我们的配置内容了。访问配置信息的URL与配置文件的映射关系如下所示：
#
#  /{application}/{profile}[/{label}]
#  /{application}-{profile}.yml
#  /{label}/{application}-{profile}.yml
#  /{application}-{profile}.properties
#  /{label}/{application}-{profile}.properties
spring:
  #服务名
  application:
    name: service-config-client
  #cloud
  cloud:
    config:
      #对应配置文件规则中的{application} 部分。在这里也就是application
      name: application
      #配置中心config-server的地址。在这里就是http://localhost:8088/
      uri: http://localhost:8091
      #对应配置文件规则中的 {profile} 部分。在这里也就是dev
      profile: local
      #分支
      #对应配置文件规则中的 {label} 部分。在这里就是master
      label: master
      discovery:
#        enabled: true
        service-id: service-config-server
    consul:
      host: 39.108.137.231
      port: 8500
      discovery:
        heartbeat:
          enabled: true
        health-check-path: /health
        instance-id: ${spring.application.name}:${spring.cloud.client.ipAddress}:${spring.application.instance_id:${server.port}}
        serviceName: ${spring.application.name}
    #开启消息跟踪
#    bus:
#      trace:
#        enabled: true
#      refresh:
#        enabled: true
  #rabbitmq
  rabbitmq:
    password: admin
    username: admin
    host: 127.0.0.1
    port: 5672
#springboot2.0 更新部分
#是否需要权限拉去，默认是true,如果不false就不允许你去拉取配置中心Server更新的内容
management:
  endpoints:
    web:
      exposure:
        include: bus-refresh



