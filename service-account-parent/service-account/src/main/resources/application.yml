management:
  endpoints:
    web:
      exposure:
        exclude: '*'
  endpoint:
    health:
      show-details: always
spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}
          jwk-set-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}
            token-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
            authorization-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/auth
            user-info-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs
            user-info-authentication-method: header
            user-name-attribute: preferred_username
        registration:
          keycloak:
            client-id: ${keycloak.resource}
            client-secret: ${keycloak.credentials.secret}
            client-name: ${spring.application.name}
            provider: keycloak
            authorization-grant-type: authorization_code
            client-authentication-method: basic
            scope:
              - openid
keycloak:
  enabled: false
  realm: ${spring.profiles.active}
  principal-attribute: preferred_username
  cors: true
  cors-allowed-methods: POST,PUT,DELETE,GET,OPTIONS,PATCH
  cors-allowed-headers: Authorization, Origin, X-Requested-With, Content-Type
  bearer-only: true
  auth-server-url: http://127.0.0.1:8888/auth
  ssl-required: external
  resource: gsh-cloud
  public-client: false
  credentials:
    secret: c2a8d5e5-b0eb-4f57-a798-06e659e1c870
  use-resource-role-mappings: true
  token-minimum-time-to-live: 3600

security:
  oauth2:
    client:
      client-id: ${keycloak.resource}
      client-secret: ${keycloak.credentials.secret}
      user-authorization-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/auth
      access-token-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
      scope: openid
      grant-type: client_credentials
    resource:
      user-info-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/userinfo
      jwk.key-set-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs

swagger:
  api:
    title: 深兰AI数字教育平台-账号管理服务API文档
    description: 账号管理服务
    version: '3.0'
    contact:
      name: lidongchun
      url: http://${swagger.host}/op/v2/api-docs
      email: developer@deepblueai.com

